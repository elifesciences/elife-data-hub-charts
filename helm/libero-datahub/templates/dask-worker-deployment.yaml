apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "dask.fullname" . }}-worker
  labels:
    app: {{ template "airflow.name" . }}
    heritage: {{ .Release.Service | quote }}
    release: {{ .Release.Name | quote }}
    chart: {{ template "airflow.chart" . }}
    component: dask-worker
  annotations:
    timestamp: "{{ date "20060102150405" .Release.Time }}"
spec:
  replicas: {{ .Values.dask.worker.replicas }}
  selector:
    matchLabels:
      app: {{ template "airflow.name" . }}
      release: {{ .Release.Name | quote }}
      component: dask-worker
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ template "airflow.name" . }}
        release: {{ .Release.Name | quote }}
        component: dask-worker
    spec:
      {{- if .Values.airflow.image.pullSecret }}
      imagePullSecrets:
        - name: {{ .Values.airflow.image.pullSecret }}
      {{- end }}
      restartPolicy: Always
      {{- if .Values.dags.initContainer.enabled }}
      initContainers:
        {{- range .Values.dags.git.git_urls }}
        - name: git-clone-{{ printf "%s" .name | replace "_" "-"  }}
          image: {{ $.Values.dags.initContainer.image.repository }}:{{ $.Values.dags.initContainer.image.tag }}  # Any image with git will do
          imagePullPolicy: {{ $.Values.dags.initContainer.image.pullPolicy }}
          command:
            - /usr/local/git/git-clone.sh
          args:
            - "{{ .url }}"
            - "{{ .ref }}"
            - "{{ .name }}"
            - "{{ .installPriority }}"
            - "/dags"
          volumeMounts:
            - name: git-clone
              mountPath: /usr/local/git
            - name: dags-data
              mountPath: /dags
            {{- if $.Values.dags.git.secret }}
            - name: git-clone-secret
              mountPath: /keys
            {{- end }}
        {{- end }}
      {{- end }}
      containers:
        - name: {{ template "dask.fullname" . }}-worker
          image: {{ .Values.airflow.image.repository }}:{{ .Values.airflow.image.tag }}
          imagePullPolicy:  {{ .Values.airflow.image.pullPolicy}}
          envFrom:
          - configMapRef:
              name: "{{ template "airflow.fullname" . }}-env"
          env:
          {{- include "airflow.mapenvsecrets" . | indent 10 }}
          volumeMounts:
            - name: scripts
              mountPath: /usr/local/scripts
          {{- range .Values.airflow.secrets }}
            - name: {{ .name }}-volume
              readOnly: true
              mountPath: {{ .secretsDir }}
          {{- end }}
          {{- if .Values.dags.initContainer.enabled }}
            - name: dags-data
              mountPath: {{ .Values.dags.gitClonePath }}
          {{- end }}
          ports:
            - containerPort: 8789
          resources:
            {{- toYaml .Values.dask.worker.resources | nindent 12 }}
          args:
            - "bash"
            - "-c"
            - >
              {{- if and ( .Values.dags.initContainer.enabled ) ( .Values.dags.initContainer.installRequirements ) }}
                /usr/local/scripts/install-requirements.sh &&
              {{- end }}
                {{ .Values.dask.worker.dask_worker }}  {{ template "dask.fullname" . }}-scheduler:{{ .Values.dask.scheduler.servicePort }} --no-bokeh
                {{- if .Values.dask.worker.resources.limits }}
                  {{ .Values.dask.worker.resources.limits.cpu | default .Values.dask.worker.default_resources.cpu | quote }} --memory-limit {{ .Values.dask.worker.resources.limits.memory | default .Values.dask.worker.default_resources.memory | quote }}
                {{- end }}
      volumes:
        - name: scripts
          configMap:
            name: {{ template "airflow.fullname" . }}-scripts
            defaultMode: 0755
        {{- range .Values.airflow.secrets }}
        - name: {{ .name }}-volume
          secret:
            secretName: {{ .name }}
        {{- end }}
        - name: dags-data
          emptyDir: {}
        {{- if .Values.dags.initContainer.enabled }}
        - name: git-clone
          configMap:
            name: {{ template "airflow.fullname" . }}-git-clone
            defaultMode: 0777
        {{- if .Values.dags.git.secret }}
        - name: git-clone-secret
          secret:
            secretName: {{ .Values.dags.git.secret }}
            defaultMode: 0700
        {{- end }}
        {{- end }}
