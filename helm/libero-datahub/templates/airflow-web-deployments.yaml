apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "airflow.fullname" . }}-web
  labels:
    app: {{ template "airflow.name" . }}
    component: web
    chart: {{ template "airflow.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
  annotations:
    timestamp: "{{ date "20060102150405" .Release.Time }}"
spec:
  replicas: {{ .Values.airflow.webReplicas }}
  minReadySeconds: 120
  strategy:
    # Smooth rolling update of the Web UI
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: {{ template "airflow.name" . }}
      component: web
      release: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        checksum/config-env: {{ include (print $.Template.BasePath "/airflow-env-configmap.yaml") . | sha256sum }}
        checksum/config-git-clone: {{ include (print $.Template.BasePath "/generic-git-clone-configmap.yaml") . | sha256sum }}
        checksum/config-scripts: {{ include (print $.Template.BasePath "/generic-scripts-configmap.yaml") . | sha256sum }}
      labels:
        app: {{ template "airflow.name" . }}
        component: web
        release: {{ .Release.Name }}
    spec:
      {{- if .Values.airflow.image.pullSecret }}
      imagePullSecrets:
        - name: {{ .Values.airflow.image.pullSecret }}
      {{- end }}
      restartPolicy: Always
      {{- if .Values.dags.initContainer.enabled }}
      initContainers:
        {{- range .Values.dags.git.git_urls }}
        - name: git-clone-{{ printf "%s" .name | replace "_" "-"  }}
          image: {{ $.Values.dags.initContainer.image.repository }}:{{ $.Values.dags.initContainer.image.tag }}  # Any image with git will do
          imagePullPolicy: {{ $.Values.dags.initContainer.image.pullPolicy }}
          command:
            - /usr/local/git/git-clone.sh
          args:
            - "{{ .url }}"
            - "{{ .ref }}"
            - "{{ .name }}"
            - "{{ .installPriority }}"
            - "/dags"
          volumeMounts:
            - name: git-clone
              mountPath: /usr/local/git
            - name: dags-data
              mountPath: /dags
            {{- if $.Values.dags.git.secret }}
            - name: git-clone-secret
              mountPath: /keys
            {{- end }}
        {{- end }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}-web
          image: {{ .Values.airflow.image.repository }}:{{ .Values.airflow.image.tag }}
          imagePullPolicy: {{ .Values.airflow.image.pullPolicy}}
          ports:
            - name: web
              containerPort: 8080
              protocol: TCP
          envFrom:
            - configMapRef:
                name: "{{ template "airflow.fullname" . }}-env"
          env:
            {{- include "airflow.mapenvsecrets" . | indent 10 }}
          resources:
{{ toYaml .Values.web.resources | indent 12 }}
          volumeMounts:
            - name: scripts
              mountPath: /usr/local/scripts
          {{- range .Values.airflow.secrets }}
            - name: {{ .name }}-volume
              readOnly: true
              mountPath: {{ .secretsDir }}/{{ .name }}
          {{- end }}
          {{- if .Values.dags.initContainer.enabled }}
            - name: dags-data
              mountPath: {{ .Values.dags.path }}
          {{- end }}
          args:
            - "bash"
            - "-c"
            {{- if and ( .Values.dags.initContainer.enabled ) ( .Values.dags.initContainer.installRequirements ) }}
            - >
              echo 'waiting {{ .Values.web.initialStartupDelay }}s...' &&
              sleep {{ .Values.web.initialStartupDelay }} &&
              echo 'installing requirements...' &&
              mkdir -p /usr/local/airflow/.local/bin &&
              export PATH=/usr/local/airflow/.local/bin:$PATH &&
              /usr/local/scripts/install-requirements.sh &&
              echo 'executing webserver...' &&
              airflow webserver
            {{- else }}
            - >
              echo 'waiting {{ .Values.web.initialStartupDelay }}s...' &&
              sleep {{ .Values.web.initialStartupDelay }} &&
              mkdir -p /usr/local/airflow/.local/bin &&
              export PATH=/usr/local/airflow/.local/bin:$PATH &&
              echo 'executing webserver...' &&
              airflow webserver
            {{- end }}
      volumes:
        - name: scripts
          configMap:
            name: {{ template "airflow.fullname" . }}-scripts
            defaultMode: 0755
        {{- range .Values.airflow.secrets }}
        - name: {{ .name }}-volume
          secret:
            secretName: {{ .name }}
        {{- end }}
        - name: dags-data
          emptyDir: {}
        {{- if .Values.dags.initContainer.enabled }}
        - name: git-clone
          configMap:
            name: {{ template "airflow.fullname" . }}-git-clone
            defaultMode: 0755
        {{- if .Values.dags.git.secret }}
        - name: git-clone-secret
          secret:
            secretName: {{ .Values.dags.git.secret }}
            defaultMode: 0700
        {{- end }}
        {{- end }}
